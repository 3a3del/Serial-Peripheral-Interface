`timescale 1ns / 1ps

module spi_tb;

    reg clk;
    reg start;
    reg [11:0] din;
    reg [3:0] which_slave_enabled;
    wire [3:0] cs;
    wire mosi;
    wire done;
    wire sclk;

    // Instantiate the SPI module
    spi #( .N(4), .cpol(0), .cpha(0) ) dut (
        .clk(clk),
        .start(start),
        .din(din),
        .which_slave_enabled(which_slave_enabled),
        .cs(cs),
        .mosi(mosi),
        .done(done),
        .sclk(sclk)
    );
integer i =0;
    // Clock generation
    initial begin
        clk = 0;
        // Initialize inputs
        start = 0;
        din = 12'hA5A; // Example data to be transmitted
    end

always #5 clk <= ~clk;

    // Stimulus
    always begin
        // Reset the module
        start = 1;
        #10;
        for(i=0;i<=10;i=i+1) begin
        din = $random ; // Example data to be transmitted
        which_slave_enabled= $random & 4'b1111;
        @posedge(done)
         #5
         display;
         end
        $stop;
    end

    task display;
        $display("Time: %0t, Start: %b, DIN: %h, CS: %b, MOSI: %b, Done: %b, SCLK: %b",
                 $time, start, din, cs, mosi, done, sclk);
    endtask

endmodule

